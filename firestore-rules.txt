// Reglas de seguridad de Firestore para TCGtrade
// Copia estas reglas en Firebase Console > Firestore > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Reglas para colecciones de usuarios
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Subcolecciones del usuario
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Reglas para colecciones de usuarios (userCollections)
    match /userCollections/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para intercambios (trades)
    match /trades/{tradeId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // Reglas para valoraciones (ratings)
    match /ratings/{ratingId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.raterUserId || 
         request.auth.uid == request.resource.data.raterUserId);
    }
    
    // Reglas para chats (ya existentes)
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.participants || 
         request.auth.uid in request.resource.data.participants);
    }
    
    // Reglas para chats de usuarios (userChats)
    match /userChats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para mensajes
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // Reglas para estadísticas de usuarios
    match /userStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para notificaciones
    match /notifications/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para configuraciones de usuario
    match /userSettings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para logs de actividad
    match /activityLogs/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para favoritos
    match /favorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para wishlist
    match /wishlist/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para historial de búsquedas
    match /searchHistory/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para datos de migración
    match /migrationStatus/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para backups
    match /backups/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para datos temporales
    match /temp/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para datos compartidos (solo lectura para usuarios autenticados)
    match /shared/{document=**} {
      allow read: if request.auth != null;
      allow write: if false; // Solo lectura para datos compartidos
    }
    
    // Reglas para datos públicos (solo lectura)
    match /public/{document=**} {
      allow read: if true;
      allow write: if false; // Solo lectura para datos públicos
    }
    
    // Reglas para administradores (opcional - descomenta si necesitas admin)
    // match /admin/{document=**} {
    //   allow read, write: if request.auth != null && 
    //     request.auth.token.admin == true;
    // }
    
    // Denegar todo lo demás
    match /{document=**} {
      allow read, write: if false;
    }
  }
}